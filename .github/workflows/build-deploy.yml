name: Deploy API

on:
  workflow_dispatch:
    inputs:
      commit-sha:
        description: "Commit SHA to deploy"
        required: true
      server_name:
        description: "Server name (dev-1, dev-2, stage, prod)"
        required: true

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    environment: build

    env:
      DOCKER_IMAGE_NAME: backend
      REGISTRY: cr.yandex/crp3ae0qds9urrqgd9d4

    steps:
      - name: Checkout repository at specific commit
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.commit-sha }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v2
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build and push Docker image
        run: |
          cd dummy-api/
          docker build -t ${{ env.REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.event.inputs.commit-sha }} .
          docker push ${{ env.REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.event.inputs.commit-sha }}

    outputs:
      image: ${{ env.REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.event.inputs.commit-sha }}

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build

    env:
      SSH_USER: yc-user
      DOCKER_IMAGE_NAME: backend
      REGISTRY: cr.yandex/crp3ae0qds9urrqgd9d4

    steps:
      - name: Checkout repository (for servers.json)
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          path: .github/workflows/servers.json

      - name: Load server IP from JSON
        id: load_server_ip
        run: |
          SERVER_IP=$(jq -r --arg SERVER "${{ github.event.inputs.server_name }}" '.[$SERVER]' .github/workflows/servers.json)
          if [ "$SERVER_IP" == "null" ] || [ -z "$SERVER_IP" ]; then
            echo "Error: Server ${{ github.event.inputs.server_name }} not found in servers.json"
            exit 1
          fi
          echo "SERVER_IP=$SERVER_IP" >> $GITHUB_ENV
        shell: bash

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PKEY }}

      - name: Add server to known_hosts
        run: ssh-keyscan -H ${{ env.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy Docker container
        run: |
          ssh ${{ env.SSH_USER }}@${{ env.SERVER_IP }} << 'EOF'
            curl --header Metadata-Flavor:Google 169.254.169.254/computeMetadata/v1/instance/service-accounts/default/token | \
            cut -f1 -d',' | \
            cut -f2 -d':' | \
            tr -d '"' | \
            docker login --username iam --password-stdin cr.yandex

            docker pull ${{ needs.build.outputs.image }}
            docker stop ${{ env.DOCKER_IMAGE_NAME }} || true
            docker rm ${{ env.DOCKER_IMAGE_NAME }} || true
            docker run -d --name ${{ env.DOCKER_IMAGE_NAME }} -p 80:5000 ${{ needs.build.outputs.image }}
          EOF
        shell: bash
